# Set the shell prompt.  See the bash man page for a description-
# of special characters.
export PS1='[\[\e[0;36m\]\u\[\e[0;37m\]@\[\e[0;35m\]\h \[\e[0;34m\]\w\[\e[00m\]] '


# Create aliases for commonly used commands.-
alias grep="grep --color=auto"
alias fgrep="fgrep --color=auto"
alias egrep="egrep --color=auto"
alias l="ls --color=auto -CF"
alias la="ls --color=auto -ACF"
alias ll="ls --color=auto -al"

# tmux needs special help with coloring
alias tmux="TERM=screen-256color tmux"

# Make less more friendly for non-text input files, see lesspipe(1)
which lesspipe &>/dev/null && eval "$(SHELL=/bin/sh lesspipe)"

# Use pacmatic as pacman client where possible
which pacmatic &>/dev/null && export PACMAN="$(which pacmatic)"

# Prefer vim as text editor
which vim &>/dev/null && export VISUAL="vim"

# Prefer vimx (with X11 clipboard) when available
which vimx &>/dev/null && alias vim="vimx"

# Script to help recover and cleanup lost vim files
# Depends on a DiffOrig command defined in ~/.vimrc
cleanswap () {
    swap_files=($(find "$HOME/.vim/tmp/swap" -name "*.swp"))

    for swap_file in $swap_files ; do
        orig_file=`echo $swap_file | perl -pe 's!/\.([^/]*).swp$!/$1!'`
        echo "Editing $orig_file"
        sleep 1
        vim -r "$orig_file" -c "DiffOrig"
        echo -n "  Ok to delete swap file? [y/n] "
        read resp
        if [ "$resp" = "y" ] ; then
            echo "  Deleting $swap_file"
            rm "$swap_file"
        fi
    done
}

# Use virtualenvwrapper where possible
wrappers=(
    /usr/bin/virtualenvwrapper_lazy.sh
    /usr/bin/virtualenvwrapper.sh
    "$HOME/bin/virtualenvwrapper.sh"
)
for wrapper in "${wrappers[@]}"; do
    if [ -f "$wrapper" ]; then
        export WORKON_HOME="$HOME/.virtualenvs"
        source "$wrapper"
        break
    fi
done

# Start rvm when possible
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"

# Start rbenv
if [ -d "$HOME/.rbenv" ]; then
    export PATH=$HOME/.rbenv/bin:$PATH
    eval "$(rbenv init -)"
fi

# Add local gems to path
which gem &>/dev/null && export PATH="$HOME/.gem/ruby/1.9.1/bin:$PATH"

# Add readline support to programs
add_readline () {
    socat READLINE EXEC:$1
}
alias rl="add_readline"

# Use ~/go for local go packages
if which go &>/dev/null; then
    export GOPATH="$HOME/go"
    export PATH="$GOPATH/bin:$PATH"
fi
